// <auto-generated />
using System;
using Blog.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.Infra.Data.Migrations
{
    [DbContext(typeof(StudyContext))]
    [Migration("20200102030055_alterperson0102")]
    partial class alterperson0102
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blog.Domain.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Name");

                    b.Property<string>("PassWord")
                        .HasColumnName("PassWord")
                        .HasMaxLength(100);

                    b.Property<string>("PersonCode")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Blog.Domain.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(11);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Blog.Domain.Models.UserInfo.UserToken", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Expires");

                    b.Property<DateTime>("IssuedAt");

                    b.Property<string>("Issuer");

                    b.Property<string>("Token")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("Blog.Domain.Models.Person", b =>
                {
                    b.OwnsMany("Blog.Domain.Models.Book", "BookStore", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("BookName")
                                .HasColumnName("BName")
                                .HasMaxLength(200);

                            b1.Property<decimal>("BookPrice")
                                .HasColumnName("BPrice")
                                .HasColumnType("decimal(18,6)");

                            b1.Property<int>("personId");

                            b1.HasKey("Id");

                            b1.HasIndex("personId");

                            b1.ToTable("Book");

                            b1.HasOne("Blog.Domain.Models.Person", "PersonInfo")
                                .WithMany("BookStore")
                                .HasForeignKey("personId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Blog.Domain.Models.Student", b =>
                {
                    b.OwnsOne("Blog.Domain.Models.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("StudentId");

                            b1.Property<string>("City");

                            b1.Property<string>("County");

                            b1.Property<string>("Province");

                            b1.Property<string>("Street");

                            b1.HasKey("StudentId");

                            b1.ToTable("Student");

                            b1.HasOne("Blog.Domain.Models.Student")
                                .WithOne("Address")
                                .HasForeignKey("Blog.Domain.Models.Address", "StudentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
